// Generated by view binder compiler. Do not edit!
package com.example.presensi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.presensi.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardViewDate;

  @NonNull
  public final CardView cardViewTime;

  @NonNull
  public final LinearLayout dateAndTime;

  @NonNull
  public final DatePicker datePickerPresensi;

  @NonNull
  public final Spinner izinSpinner;

  @NonNull
  public final EditText keteranganEditText;

  @NonNull
  public final Button presensiButton;

  @NonNull
  public final TimePicker timePickerPresensi;

  @NonNull
  public final TextView titlePresensi;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardViewDate,
      @NonNull CardView cardViewTime, @NonNull LinearLayout dateAndTime,
      @NonNull DatePicker datePickerPresensi, @NonNull Spinner izinSpinner,
      @NonNull EditText keteranganEditText, @NonNull Button presensiButton,
      @NonNull TimePicker timePickerPresensi, @NonNull TextView titlePresensi) {
    this.rootView = rootView;
    this.cardViewDate = cardViewDate;
    this.cardViewTime = cardViewTime;
    this.dateAndTime = dateAndTime;
    this.datePickerPresensi = datePickerPresensi;
    this.izinSpinner = izinSpinner;
    this.keteranganEditText = keteranganEditText;
    this.presensiButton = presensiButton;
    this.timePickerPresensi = timePickerPresensi;
    this.titlePresensi = titlePresensi;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView_date;
      CardView cardViewDate = ViewBindings.findChildViewById(rootView, id);
      if (cardViewDate == null) {
        break missingId;
      }

      id = R.id.cardView_time;
      CardView cardViewTime = ViewBindings.findChildViewById(rootView, id);
      if (cardViewTime == null) {
        break missingId;
      }

      id = R.id.date_and_time;
      LinearLayout dateAndTime = ViewBindings.findChildViewById(rootView, id);
      if (dateAndTime == null) {
        break missingId;
      }

      id = R.id.date_picker_presensi;
      DatePicker datePickerPresensi = ViewBindings.findChildViewById(rootView, id);
      if (datePickerPresensi == null) {
        break missingId;
      }

      id = R.id.izin_spinner;
      Spinner izinSpinner = ViewBindings.findChildViewById(rootView, id);
      if (izinSpinner == null) {
        break missingId;
      }

      id = R.id.keterangan_editText;
      EditText keteranganEditText = ViewBindings.findChildViewById(rootView, id);
      if (keteranganEditText == null) {
        break missingId;
      }

      id = R.id.presensi_button;
      Button presensiButton = ViewBindings.findChildViewById(rootView, id);
      if (presensiButton == null) {
        break missingId;
      }

      id = R.id.time_picker_presensi;
      TimePicker timePickerPresensi = ViewBindings.findChildViewById(rootView, id);
      if (timePickerPresensi == null) {
        break missingId;
      }

      id = R.id.title_presensi;
      TextView titlePresensi = ViewBindings.findChildViewById(rootView, id);
      if (titlePresensi == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, cardViewDate, cardViewTime,
          dateAndTime, datePickerPresensi, izinSpinner, keteranganEditText, presensiButton,
          timePickerPresensi, titlePresensi);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
